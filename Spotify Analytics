-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL.

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.
-- Next, I explored the data using the following SQL.

-- 1) Which songs are the most popular and danceble?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE popularity >= 90 
AND danceability >= 0.7;

-- 2) Which artists are reoccuring and by how many times?
SELECT artist_name, COUNT(artist_name) AS number_of_reoccurance
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING number_of_reoccurance >= 2
ORDER BY number_of_reoccurance DESC;

-- 3) Which artist has the longest duration of songs altogether in the Top 50?
SELECT artist_name, Max(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY duration_ms DESC
LIMIT 1;

-- 4) Top 10 sad songs
SELECT track_name, valence 
FROM BIT_DB.Spotifydata
ORDER BY valence asc
LIMIT 10;

-- 5) What are the best songs for a kareoke night? 
SELECT artist_name, track_name, popularity, speechiness
FROM BIT_DB.Spotifydata
ORDER BY speechiness DESC
LIMIT 20;
